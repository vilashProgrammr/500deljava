"use strict";
/********************************************************************************
 * Copyright (C) 2019 Red Hat, Inc. and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var scm_contribution_1 = require("./scm-contribution");
var browser_1 = require("@theia/core/lib/browser");
var scm_service_1 = require("./scm-service");
var core_1 = require("@theia/core");
var scm_widget_1 = require("./scm-widget");
require("../../src/browser/style/index.css");
var scm_title_command_registry_1 = require("./scm-title-command-registry");
var scm_resource_command_registry_1 = require("./scm-resource-command-registry");
var scm_quick_open_service_1 = require("./scm-quick-open-service");
var scm_group_command_registry_1 = require("./scm-group-command-registry");
var dirty_diff_module_1 = require("./dirty-diff/dirty-diff-module");
var browser_2 = require("@theia/navigator/lib/browser");
var scm_navigator_decorator_1 = require("./decorations/scm-navigator-decorator");
var scm_decorations_service_1 = require("./decorations/scm-decorations-service");
var scm_avatar_service_1 = require("./scm-avatar-service");
exports.default = new inversify_1.ContainerModule(function (bind) {
    bind(scm_service_1.ScmService).toSelf().inSingletonScope();
    bind(scm_widget_1.ScmWidget).toSelf().inSingletonScope();
    bind(browser_1.WidgetFactory).toDynamicValue(function (ctx) { return ({
        id: scm_contribution_1.SCM_WIDGET_FACTORY_ID,
        createWidget: function () { return ctx.container.get(scm_widget_1.ScmWidget); }
    }); }).inSingletonScope();
    bind(scm_quick_open_service_1.ScmQuickOpenService).toSelf().inSingletonScope();
    browser_1.bindViewContribution(bind, scm_contribution_1.ScmContribution);
    bind(browser_1.FrontendApplicationContribution).toService(scm_contribution_1.ScmContribution);
    bind(scm_title_command_registry_1.ScmTitleCommandRegistry).toSelf().inSingletonScope();
    bind(browser_1.FrontendApplicationContribution).toService(scm_title_command_registry_1.ScmTitleCommandRegistry);
    core_1.bindContributionProvider(bind, scm_title_command_registry_1.ScmTitleCommandsContribution);
    bind(scm_resource_command_registry_1.ScmResourceCommandRegistry).toSelf().inSingletonScope();
    bind(browser_1.FrontendApplicationContribution).toService(scm_resource_command_registry_1.ScmResourceCommandRegistry);
    core_1.bindContributionProvider(bind, scm_resource_command_registry_1.ScmResourceCommandContribution);
    bind(scm_group_command_registry_1.ScmGroupCommandRegistry).toSelf().inSingletonScope();
    bind(browser_1.FrontendApplicationContribution).toService(scm_group_command_registry_1.ScmGroupCommandRegistry);
    core_1.bindContributionProvider(bind, scm_group_command_registry_1.ScmGroupCommandContribution);
    bind(browser_2.NavigatorTreeDecorator).to(scm_navigator_decorator_1.ScmNavigatorDecorator).inSingletonScope();
    bind(scm_decorations_service_1.ScmDecorationsService).toSelf().inSingletonScope();
    bind(scm_avatar_service_1.ScmAvatarService).toSelf().inSingletonScope();
    dirty_diff_module_1.bindDirtyDiff(bind);
});
//# sourceMappingURL=scm-frontend-module.js.map