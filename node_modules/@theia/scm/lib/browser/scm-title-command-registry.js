"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var core_1 = require("@theia/core");
exports.ScmTitleCommandsContribution = Symbol('ScmTitleCommandsContribution');
var ScmTitleCommandRegistry = /** @class */ (function () {
    function ScmTitleCommandRegistry() {
        this.items = [];
    }
    ScmTitleCommandRegistry.prototype.onStart = function () {
        var e_1, _a;
        var contributions = this.contributionProvider.getContributions();
        try {
            for (var contributions_1 = __values(contributions), contributions_1_1 = contributions_1.next(); !contributions_1_1.done; contributions_1_1 = contributions_1.next()) {
                var contribution = contributions_1_1.value;
                contribution.registerScmTitleCommands(this);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (contributions_1_1 && !contributions_1_1.done && (_a = contributions_1.return)) _a.call(contributions_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    ScmTitleCommandRegistry.prototype.registerItem = function (item) {
        this.items.push(item);
    };
    ScmTitleCommandRegistry.prototype.getItems = function () {
        return this.items;
    };
    __decorate([
        inversify_1.inject(core_1.ContributionProvider),
        inversify_1.named(exports.ScmTitleCommandsContribution),
        __metadata("design:type", Object)
    ], ScmTitleCommandRegistry.prototype, "contributionProvider", void 0);
    ScmTitleCommandRegistry = __decorate([
        inversify_1.injectable()
    ], ScmTitleCommandRegistry);
    return ScmTitleCommandRegistry;
}());
exports.ScmTitleCommandRegistry = ScmTitleCommandRegistry;
//# sourceMappingURL=scm-title-command-registry.js.map